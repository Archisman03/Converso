NlFSaBfnLQA6Dwa3



-- -- Clean up and fix database relationships

-- -- 1. Drop all foreign key constraints to start clean
-- DO $$ 
-- DECLARE
--     r RECORD;
-- BEGIN
--     -- Drop all foreign key constraints on session_history
--     FOR r IN (SELECT constraint_name FROM information_schema.table_constraints 
--               WHERE table_name = 'session_history' AND constraint_type = 'FOREIGN KEY')
--     LOOP
--         EXECUTE 'ALTER TABLE session_history DROP CONSTRAINT IF EXISTS ' || r.constraint_name;
--     END LOOP;
    
--     -- Drop all foreign key constraints on bookmarks
--     FOR r IN (SELECT constraint_name FROM information_schema.table_constraints 
--               WHERE table_name = 'bookmarks' AND constraint_type = 'FOREIGN KEY')
--     LOOP
--         EXECUTE 'ALTER TABLE bookmarks DROP CONSTRAINT IF EXISTS ' || r.constraint_name;
--     END LOOP;
-- END $$;

-- -- 2. Ensure tables have correct structure
-- -- Drop and recreate session_history with clean structure
-- DROP TABLE IF EXISTS session_history CASCADE;

-- CREATE TABLE session_history (
--     id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
--     companion_id uuid NOT NULL,
--     user_id text NOT NULL,
--     created_at timestamp with time zone DEFAULT now()
-- );

-- -- Drop and recreate bookmarks with clean structure
-- DROP TABLE IF EXISTS bookmarks CASCADE;

-- CREATE TABLE bookmarks (
--     id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
--     companion_id uuid NOT NULL,
--     user_id text NOT NULL,
--     created_at timestamp with time zone DEFAULT now()
-- );

-- -- 3. Add single, clean foreign key constraints
-- ALTER TABLE session_history 
-- ADD CONSTRAINT session_history_companion_fkey 
-- FOREIGN KEY (companion_id) REFERENCES companions(id) ON DELETE CASCADE;

-- ALTER TABLE bookmarks 
-- ADD CONSTRAINT bookmarks_companion_fkey 
-- FOREIGN KEY (companion_id) REFERENCES companions(id) ON DELETE CASCADE;

-- -- 4. Create performance indexes
-- CREATE INDEX idx_session_history_user_id ON session_history(user_id);
-- CREATE INDEX idx_session_history_companion_id ON session_history(companion_id);
-- CREATE INDEX idx_session_history_created_at ON session_history(created_at DESC);
-- CREATE INDEX idx_bookmarks_user_id ON bookmarks(user_id);
-- CREATE INDEX idx_bookmarks_companion_id ON bookmarks(companion_id);

-- -- 5. Enable RLS and create policies
-- ALTER TABLE session_history ENABLE ROW LEVEL SECURITY;
-- ALTER TABLE bookmarks ENABLE ROW LEVEL SECURITY;

-- -- Session history policies
-- CREATE POLICY "Users can view their own sessions" ON session_history
--     FOR SELECT USING (auth.uid()::text = user_id);

-- CREATE POLICY "Users can create their own sessions" ON session_history
--     FOR INSERT WITH CHECK (auth.uid()::text = user_id);

-- -- Bookmarks policies
-- CREATE POLICY "Users can view their own bookmarks" ON bookmarks
--     FOR SELECT USING (auth.uid()::text = user_id);

-- CREATE POLICY "Users can create their own bookmarks" ON bookmarks
--     FOR INSERT WITH CHECK (auth.uid()::text = user_id);

-- CREATE POLICY "Users can delete their own bookmarks" ON bookmarks
--     FOR DELETE USING (auth.uid()::text = user_id);

-- -- 6. Verify the setup
-- SELECT 
--     'Database schema cleaned and fixed successfully!' as status,
--     COUNT(*) as companion_count
-- FROM companions;

-- -- Check foreign keys
-- SELECT 
--     tc.table_name,
--     tc.constraint_name,
--     kcu.column_name,
--     ccu.table_name AS foreign_table_name,
--     ccu.column_name AS foreign_column_name
-- FROM information_schema.table_constraints AS tc
-- JOIN information_schema.key_column_usage AS kcu
--     ON tc.constraint_name = kcu.constraint_name
--     AND tc.table_schema = kcu.table_schema
-- JOIN information_schema.constraint_column_usage AS ccu
--     ON ccu.constraint_name = tc.constraint_name
--     AND ccu.table_schema = tc.table_schema
-- WHERE tc.constraint_type = 'FOREIGN KEY'
--     AND tc.table_name IN ('session_history', 'bookmarks')
-- ORDER BY tc.table_name;

ALTER TABLE session_history
ALTER COLUMN user_id TYPE text;

ALTER TABLE companions
ALTER COLUMN author TYPE text;
